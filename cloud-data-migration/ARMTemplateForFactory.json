{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cloud-data-migration"
		},
		"ls_db_mig_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_db_mig'"
		},
		"ls_db_target_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_db_target'"
		},
		"ls_storage_mig_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_storage_mig'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00_mig')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Parent Pipline",
				"activities": [
					{
						"name": "prepare",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_prepare",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UID": {
									"value": "@pipeline().parameters.UID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "extract",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "prepare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02_extract",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UID": {
									"value": "@pipeline().parameters.UID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "merge",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "extract",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03_merge",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UID": {
									"value": "@pipeline().parameters.UID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "transmit",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "merge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "04_transmit",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UID": {
									"value": "@pipeline().parameters.UID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "persist",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "transmit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "05_persist",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UID": {
									"value": "@pipeline().parameters.UID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01_prepare')]",
				"[concat(variables('factoryId'), '/pipelines/02_extract')]",
				"[concat(variables('factoryId'), '/pipelines/03_merge')]",
				"[concat(variables('factoryId'), '/pipelines/04_transmit')]",
				"[concat(variables('factoryId'), '/pipelines/05_persist')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_prepare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Child Pipeline",
				"activities": [
					{
						"name": "truncate_mig_db",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[trancateMigDb]"
						},
						"linkedServiceName": {
							"referenceName": "ls_db_mig",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_staging_csv_files",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "truncate_mig_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[getTableList]",
								"storedProcedureParameters": {
									"SchemaName": {
										"type": "String",
										"value": "staging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "copy_staging_csvs_to_input",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_staging_csv_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_staging_csv_files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy_csv_staging_to_input",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": "drop",
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": {
													"value": "@concat('input/',pipeline().parameters.UID,'/',item().TABLE_SCHEMA)",
													"type": "Expression"
												},
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get_persist_csv_files",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "truncate_mig_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[getTableList]",
								"storedProcedureParameters": {
									"SchemaName": {
										"type": "String",
										"value": "rowmap"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "copy_persist_csvs_to_input",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_persist_csv_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_persist_csv_files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy_csv_persist_to_input",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": {
													"value": "@concat('persist/',item().TABLE_SCHEMA)",
													"type": "Expression"
												},
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": {
													"value": "@concat('input/',pipeline().parameters.UID,'/',item().TABLE_SCHEMA)",
													"type": "Expression"
												},
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_db_mig')]",
				"[concat(variables('factoryId'), '/datasets/ds_db_mig_query')]",
				"[concat(variables('factoryId'), '/datasets/ds_storage_mig_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_extract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Child Pipeline",
				"activities": [
					{
						"name": "load_staging_tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_staging_tables_List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_staging_tables_List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "load_staging_csv_to_db_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": {
													"value": "@concat('input/',pipeline().parameters.UID,'/',item().TABLE_SCHEMA)",
													"type": "Expression"
												},
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_db_mig_table",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"table": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get_staging_tables_List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[getTableList]",
								"storedProcedureParameters": {
									"SchemaName": {
										"type": "String",
										"value": "staging"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "get_persist_tables_List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[getTableList]",
								"storedProcedureParameters": {
									"SchemaName": {
										"type": "String",
										"value": "rowmap"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "load_persist_tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_persist_tables_List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_persist_tables_List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "load_persist_csv_to_db_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": {
													"value": "@concat('input/',pipeline().parameters.UID,'/',item().TABLE_SCHEMA)",
													"type": "Expression"
												},
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_db_mig_table",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"table": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_db_mig_query')]",
				"[concat(variables('factoryId'), '/datasets/ds_storage_mig_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_db_mig_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_merge')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Child Pipeline",
				"activities": [
					{
						"name": "merge_operator",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[mergeOperator]"
						},
						"linkedServiceName": {
							"referenceName": "ls_db_mig",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge_service",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[mergeService]"
						},
						"linkedServiceName": {
							"referenceName": "ls_db_mig",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge_station",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[mergeStation]"
						},
						"linkedServiceName": {
							"referenceName": "ls_db_mig",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge_train",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[mergeTrain]"
						},
						"linkedServiceName": {
							"referenceName": "ls_db_mig",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge_passagners_count",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "merge_operator",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "merge_service",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "merge_station",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "merge_train",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[mergePassangersCount]"
						},
						"linkedServiceName": {
							"referenceName": "ls_db_mig",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_db_mig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04_transmit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Child Pipeline",
				"activities": [
					{
						"name": "upload_Operator",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM load.Operator",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[migdb].[mergeOperator]",
								"sqlWriterTableType": "migdb.OperatorTableType",
								"storedProcedureTableTypeParameterName": "SourceTable",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_db_target_query",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "upload_Station",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM load.Station",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[migdb].[mergeStation]",
								"sqlWriterTableType": "migdb.StationTableType",
								"storedProcedureTableTypeParameterName": "SourceTable",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_db_target_query",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_db_mig_query')]",
				"[concat(variables('factoryId'), '/datasets/ds_db_target_query')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/05_persist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Child Pipeline",
				"activities": [
					{
						"name": "load_persist_tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_persist_tables_List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_persist_tables_List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "load_rowmap_db_to_csv_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_db_mig_table",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"table": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_storage_mig_csv",
											"type": "DatasetReference",
											"parameters": {
												"container": "cloud-data-mig",
												"directory": {
													"value": "@concat('persist/',item().TABLE_SCHEMA)",
													"type": "Expression"
												},
												"file": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "get_persist_tables_List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[getTableList]",
								"storedProcedureParameters": {
									"SchemaName": {
										"type": "String",
										"value": "rowmap"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_db_mig_query",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_db_mig_query')]",
				"[concat(variables('factoryId'), '/datasets/ds_db_mig_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_storage_mig_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cloud-data-mig')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Master pipeline",
				"activities": [
					{
						"name": "set_uid",
						"description": "Unique ID for the whole pipeline run",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UID",
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "run_migration",
						"description": "Run Parent Pipline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "set_uid",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "00_mig",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UID": {
									"value": "@variables('UID')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "raise_error",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "run_migration",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"UID": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00_mig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_db_mig_query')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_db_mig",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_db_mig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_db_mig_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_db_mig",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_db_mig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_db_target_query')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_db_target",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_db_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_storage_mig_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_storage_mig",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().file,'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_storage_mig')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_db_mig')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_db_mig_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_db_target')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_db_target_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_storage_mig')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_storage_mig_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}